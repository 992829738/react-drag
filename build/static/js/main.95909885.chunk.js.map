{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg","App.less"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pageX","pageY","moving","e","X","target","getBoundingClientRect","left","Y","document","getElementsByClassName","offsetTop","mouseX","mouseY","screenY","diffX","diffY","position","getPosition","window","onmousemove","onMouseMove","onmouseup","onMouseUp","setState","_this$state","x","y","clientWidth","documentElement","clientHeight","scrollHeight","modal","maxHeight","offsetHeight","maxWidth","offsetWidth","top","_this$state2","react_default","a","createElement","className","style","onMouseDown","icon","type","onClick","handleCancel","row","col","span","src","logo","alt","es_button","key","size","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.95909885.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.less';\nimport { Button, Row, Col, Icon } from 'antd'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      pageX: '50%',\n      pageY: '80px',\n      moving: false\n     };\n  }\n  // 获取鼠标点击title时的坐标、title的坐标以及两者的位移\n  getPosition (e) {\n    // 标题DOM元素titleDom\n    const titleDom = e.target\n    // titleDom的坐标(视窗)\n    const X = titleDom.getBoundingClientRect().left\n    // 由于Y轴出现滚动条，需要与鼠标保持一致，存储页面相对位置\n    const Y = document.getElementsByClassName('group')[0].offsetTop\n\n    // 鼠标点击的坐标(页面)\n    let mouseX = e.pageX\n    let mouseY = e.screenY\n    // 鼠标点击位置与modal的位移\n    const diffX = mouseX - X\n    const diffY = mouseY - Y\n    return {X, Y, mouseX, mouseY, diffX, diffY}\n  }\n \n  /**\n   * 鼠标按下，设置modal状态为可移动，并注册鼠标移动事件\n   * 计算鼠标按下时，指针所在位置与modal位置以及两者的差值\n   **/\n  onMouseDown (e) {\n    const position = this.getPosition(e)\n    window.onmousemove = this.onMouseMove\n    window.onmouseup = this.onMouseUp\n    this.setState({moving: true, diffX: position.diffX, diffY: position.diffY})\n  }\n \n  // 松开鼠标，设置modal状态为不可移动\n  onMouseUp (e) {\n    const { moving } = this.state\n    moving && this.setState({moving: false});\n  }\n \n  // 鼠标移动重新设置modal的位置\n  onMouseMove (e) {\n    const {moving, diffX, diffY} = this.state\n    if (moving) {\n      // 获取鼠标位置数据\n      const position = this.getPosition(e)\n      // 计算modal应该随鼠标移动到的坐标\n      const x = position.mouseX - diffX - 185\n      const y = position.mouseY - diffY\n      // 窗口大小，结构限制，需要做调整，减去侧边栏宽度\n      const clientWidth = document.documentElement.clientWidth - 192\n      // 页面结构限制\n      const clientHeight = document.getElementsByClassName(\"nr-page-content-inner\")[0] && document.getElementsByClassName(\"nr-page-content-inner\")[0].scrollHeight\n      // const clientHeight = document.body.scrollHeight + 25\n      const modal = document.getElementsByClassName(\"group\")[0]\n      if (modal) {\n        // 计算modal坐标的最大值\n        const maxHeight = clientHeight - modal.offsetHeight\n        const maxWidth = clientWidth - modal.offsetWidth\n        // 判断得出modal的最终位置，不得超出浏览器可见窗口\n        const left = x > 0 ? (x < maxWidth ? x : maxWidth) : 0\n        const top = y > 0 ? (y < maxHeight ? y : maxHeight) : 0\n        this.setState({pageX: left, pageY: top})\n      }\n    }\n  }\n  render() {\n    let { pageX, pageY } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div\n            className='group'\n            style={{\n              left: pageX,\n              top: pageY\n            }}>\n            <div className='group_head'\n              onMouseDown={this.onMouseDown}\n            >\n              <Icon type=\"cross\" className='group_head_close' onClick={this.handleCancel} />\n              集团标品信息\n            </div>\n            <div className='group_body'>\n              <Row><Col span='4'>商品条形码：</Col><Col span='18'>89757</Col></Row>\n              <Row>\n                <Col span='2'>名称：</Col>\n                <Col span='18'>西伯利亚大咸鱼</Col>\n              </Row>\n              <Row>\n                <Col span='2'>品牌：</Col>\n                <Col span='18'>美国圣地亚哥</Col>\n              </Row>\n              <Row className='group_photos'>\n                <Col span='2'>图片：</Col>\n                <Col span='18'><img src={logo} alt='test img' /></Col>\n              </Row>\n              <Row>\n                <Col span='2'>重量：</Col>\n                <Col span='18'>800(g)</Col>\n              </Row>\n              <Row>\n                <Col span='2'>&emsp;长：</Col>\n                <Col span='18'>777(mm)</Col>\n              </Row>\n              <Row>\n                <Col span='2'>&emsp;宽：</Col>\n                <Col span='18'>888(mm)</Col>\n              </Row>\n              <Row>\n                <Col span='2'>&emsp;高：</Col>\n                <Col span='18'>999(mm)</Col>\n              </Row>\n            </div>\n            <div className='group_footer'>\n              <Button key=\"submit\" type=\"primary\" size=\"large\" className='group_footer_useAll'>\n                使用全部信息\n              </Button>\n              <Button key=\"back\" type=\"ghost\" size=\"large\" >关闭</Button>\n            </div>\n          </div>\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/App.38d033d4.less\";"],"sourceRoot":""}